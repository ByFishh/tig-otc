export const abi = [
  {
    type: "constructor",
    inputs: [
      { name: "initialUsdc", type: "address", internalType: "address" },
      { name: "initialTig", type: "address", internalType: "address" },
      { name: "initialFees", type: "uint256", internalType: "uint256" },
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "initialFeesRecipient",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "MAX_BPS",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "cancelOffer",
    inputs: [{ name: "offerId", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [{ name: "pendingOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "createOffer",
    inputs: [
      {
        name: "offerType",
        type: "uint8",
        internalType: "enum OTC.OfferType",
      },
      { name: "inAmount", type: "uint256", internalType: "uint256" },
      { name: "outAmount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "fees",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "feesRecipient",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "fillOffer",
    inputs: [{ name: "offerId", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getOrders",
    inputs: [
      {
        name: "offerStatus",
        type: "uint8",
        internalType: "enum OTC.OfferStatus",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct OTC.Offer[]",
        components: [
          { name: "creator", type: "address", internalType: "address" },
          {
            name: "offerType",
            type: "uint8",
            internalType: "enum OTC.OfferType",
          },
          {
            name: "offerStatus",
            type: "uint8",
            internalType: "enum OTC.OfferStatus",
          },
          { name: "inToken", type: "address", internalType: "address" },
          {
            name: "inAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "outAmount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "offers",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [
      { name: "creator", type: "address", internalType: "address" },
      {
        name: "offerType",
        type: "uint8",
        internalType: "enum OTC.OfferType",
      },
      {
        name: "offerStatus",
        type: "uint8",
        internalType: "enum OTC.OfferStatus",
      },
      { name: "inToken", type: "address", internalType: "address" },
      { name: "inAmount", type: "uint256", internalType: "uint256" },
      { name: "outToken", type: "address", internalType: "address" },
      { name: "outAmount", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "result", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [{ name: "pendingOwner", type: "address", internalType: "address" }],
    outputs: [{ name: "result", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "setFees",
    inputs: [{ name: "newFees", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setFeesRecipient",
    inputs: [
      {
        name: "newFeesRecipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "tigAddress",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalOffers",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "usdcAddress",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OfferCanceled",
    inputs: [
      {
        name: "offerId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OfferCreated",
    inputs: [
      {
        name: "creator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "offerId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "offerType",
        type: "uint8",
        indexed: false,
        internalType: "enum OTC.OfferType",
      },
      {
        name: "inAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "outAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OfferFilled",
    inputs: [
      {
        name: "offerId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "AlreadyInitialized", inputs: [] },
  { type: "error", name: "InvalidFees", inputs: [] },
  { type: "error", name: "InvalidOfferId", inputs: [] },
  { type: "error", name: "InvalidOfferType", inputs: [] },
  { type: "error", name: "InvalidStatus", inputs: [] },
  { type: "error", name: "NewOwnerIsZeroAddress", inputs: [] },
  { type: "error", name: "NoHandoverRequest", inputs: [] },
  { type: "error", name: "Unauthorized", inputs: [] },
  { type: "error", name: "Unauthorized", inputs: [] },
  { type: "error", name: "ZeroAddress", inputs: [] },
  { type: "error", name: "ZeroValue", inputs: [] },
] as const;
